type User {
    id: ID!
    fullname: String
    email: String
    password: String
    phone: String
}

type Category {
    id: ID!
    name: String
    images: String
}

type Product {
    id: ID!
    title: String
    quantity: Int
    description: String
    price: Float
    user: User
    categories: [Category]
}

# Dùng cho việc tạo và cập nhật
input UserInput {
    fullname: String!
    email: String!
    password: String!
    phone: String
}

input CategoryInput {
    name: String!
    images: String
}

input ProductInput {
    title: String!
    quantity: Int!
    description: String
    price: Float!
    userId: ID!
    categoryIds: [ID!]
}

# Nơi định nghĩa các truy vấn LẤY dữ liệu
type Query {
    # Product queries
    productsByPriceAsc: [Product]
    productsByCategory(categoryId: ID!): [Product]
    productById(id: ID!): Product

    # User queries
    allUsers: [User]
    userById(id: ID!): User

    # Category queries
    allCategories: [Category]
    categoryById(id: ID!): Category
}

# Nơi định nghĩa các hành động THAY ĐỔI dữ liệu (Create, Update, Delete)
type Mutation {
    # User mutations
    createUser(user: UserInput!): User
    updateUser(id: ID!, user: UserInput!): User
    deleteUser(id: ID!): Boolean

    # Category mutations
    createCategory(category: CategoryInput!): Category
    updateCategory(id: ID!, category: CategoryInput!): Category
    deleteCategory(id: ID!): Boolean

    # Product mutations
    createProduct(product: ProductInput!): Product
    updateProduct(id: ID!, product: ProductInput!): Product
    deleteProduct(id: ID!): Boolean
}